<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Experiment>
<Experiment_Text_Page_01>Experiment 11: Automatic Night Light</Experiment_Text_Page_01>
<Experiment_Number_Page_01>11</Experiment_Number_Page_01>
<Experiment_Text_Page_02>Experiment 11: Automatic Night Light</Experiment_Text_Page_02>
<Experiment_Text_Page_03>Experiment 11: Automatic Night Light</Experiment_Text_Page_03>
<Experiment_Text_Page_04>Experiment 11: Automatic Night Light</Experiment_Text_Page_04>
<Part_1>
<Description_Title>Automatic Night Light</Description_Title>
</Part_1>
<Part_2>
<Description_Text>We now have all the programming tools we need to make some totally awesome, interactive projects. Let’s incorporate the light sensor – another analog input component – to create an automatic night light that turns on when it’s dark.
</Description_Text>
<Background_Information_Title>Background Information</Background_Information_Title>
<Background_Information_Text>You may not see them, but light sensors are incorporated into all sorts of modern electronic devices. There are light sensors in smartphones which measure how bright your environment is, and adjust the screen brightness accordingly. There are light sensors in smoke detectors that detect particles in air. Photogates use a light sensor to determine when an object passes a certain point – great for those photo finishes!
The light sensor on the Digital Sandbox is called a photo-transistor. It produces an analog voltage relative to the amount of light it sees. The lower the analog value, the darker the enviroment. If you cover the sensor completely, you might get the output all the way down to 0. Shine a flashlight on it and you might get a maximized reading of 1023.</Background_Information_Text>
</Part_2>
<Part_3>
<Code_Components_Title>Code Components</Code_Components_Title>
<Code_Components_Text>Here is the code block setup for this experiment:
There aren’t any new blocks, but we may have to adjust the value of the dark variable to make the night light work perfectly. That’s where serial communication will come in handy!
</Code_Components_Text>
</Part_3>
<Program>program</Program>
<Setup>setup</Setup>
<Loop>loop</Loop>
<Set_Number_Variable>set number variable</Set_Number_Variable>
<Variable>variable</Variable>
<Value>value</Value>
<Variable_Name_01>dark</Variable_Name_01>
<If_else>if</If_else>
<Test>test</Test>
<Then>then</Then>
<Else>else</Else>
<Communication_01>serial println</Communication_01>
<Custom_Message_01>glue</Custom_Message_01>
<Analog_Pin>analog pin #</Analog_Pin>
<Set_Digital_Pin>set digital pin</Set_Digital_Pin>
<Sign>#</Sign>
<Logical_Operator_01>&lt;=</Logical_Operator_01>
<Pin_01>1</Pin_01>
<Pin_02>4</Pin_02>
<Pin_03>8</Pin_03>
<Number_01>10</Number_01>
<Digital_value_01>HIGH</Digital_value_01>
<Digital_value_02>LOW</Digital_value_02>
<Delay>delay milliseconds</Delay>
<Milliseconds_01>100</Milliseconds_01>
<Part_4>
<Do_This_Title>Do This</Do_This_Title>
<Do_This_Text>Snap your blocks together to match the diagram above, and upload.
The trick to this experiment is finding the perfect setting for the dark variable. If your room is nice and bright, the white LEDs on pins 4 and 8 should be off. When the lights are off (or the sensor is covered), the LEDs should light up.
If the lights aren’t behaving properly, that’s OK! You just need to fine-tune the dark variable. Open up the serial monitor to view the output of the light sensor. Take note of the sensor’s reading when the lights are on, then turn the lights off. What are the values now? Try setting the value of the dark variable just a bit higher than that.
</Do_This_Text>
<Further_Explorations_Title>Further Explorations</Further_Explorations_Title>
<Further_Explorations_Text>If the brightness is right on the border of on/off, the LEDs can blink unpleasantly. Try adding another if statement to catch if the light sensor is right in the middle range, there you can dim the LEDs based on what the sensor reads.
Try incorporating the RGB LED into this project. If it’s super-bright light up yellow. Kind of dim? Green. Totally dark? Blue.</Further_Explorations_Text>
</Part_4>
</Experiment>