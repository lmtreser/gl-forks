<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Experiment>
<Experiment_Text_Page_01>Experiment 12: Thermal Alert!</Experiment_Text_Page_01>
<Experiment_Number_Page_01>12</Experiment_Number_Page_01>
<Experiment_Text_Page_02>Experiment 12: Thermal Alert!</Experiment_Text_Page_02>
<Experiment_Text_Page_03>Experiment 12: Thermal Alert!</Experiment_Text_Page_03>
<Experiment_Text_Page_04>Experiment 12: Thermal Alert!</Experiment_Text_Page_04>
<Part_1>
<Description_Title>Thermal Alert!</Description_Title>
</Part_1>
<Part_2>
<Description_Text>“Is it hot in here, or is it just me?” Using a temperature sensor, which is able to precisely measure the room temperature, we can answer that question once and for all!</Description_Text>
<Background_Information_Title>Background Information</Background_Information_Title>
<Background_Information_Text>Temperature sensors are a critical component in many circuits, whether you’re controlling an A/C system or creating a safety mechanism for gas-powered appliances. Electronic temperatures sensors come many form-factors, from big thermocouples that can measure up to 1000 °C to that little black rectangle on the Digital Sandbox.
The temperature sensor on the Sandbox produces an analog voltage that represents the temperature around it. The voltage is actually linearly proportional to the Celsius temperature. If you know the output voltage of the sensor, you can calculate the temperature with this equation:
temp = (voltage - 0.5) / 0.01
We can have the microcontroller do all of that math for us as long as we find the right algorithm – an equation or set of instructions that accomplish a specified task.
</Background_Information_Text>
</Part_2>
<Part_3>
<Code_Components_Title>Code Components</Code_Components_Title>
<Code_Components_Text>We warned you that there’d be a lot of math on this one, here’s the setup:
There aren’t any new blocks here, but, as you can see, we do get to use a wide variety of mathematical operators. Pay close attention to the order of operations. When you have a series of nested mathematical operators, the innermost operation is calculated first.</Code_Components_Text>
</Part_3>
<Program>program</Program>
<Setup>setup</Setup>
<Loop>loop</Loop>
<Set_Number_Variable>set number variable</Set_Number_Variable>
<Variable>variable</Variable>
<Value>value</Value>
<Variable_Name_01>celsius</Variable_Name_01>
<Variable_Name_02>fahrenheit</Variable_Name_02>
<Communication_01>serial println</Communication_01>
<Custom_Message_01>Celsius:</Custom_Message_01>
<Custom_Message_02>Fahrenheit:</Custom_Message_02>
<Custom_Message_03>glue</Custom_Message_03>
<If_else>if/else</If_else>
<Test>test</Test>
<Then>then</Then>
<Else>else</Else>
<Communication_01>serial println</Communication_01>
<Custom_Message_01>glue</Custom_Message_01>
<Analog_Pin>analog pin #</Analog_Pin>
<Math_Operator_01>x</Math_Operator_01>
<Math_Operator_02>-</Math_Operator_02>
<Math_Operator_03>+</Math_Operator_03>
<Math_Operator_04><![CDATA[÷]]></Math_Operator_04>
<Logical_Operator>&gt; =</Logical_Operator>
<Set_Digital_Pin>set digital pin</Set_Digital_Pin>
<Sign>#</Sign>
<Pin_01>2</Pin_01>
<Pin_02>9</Pin_02>
<Pin_03>11</Pin_03>
<Number_01>0</Number_01>
<Number_02>2</Number_02>
<Number_03>1024.0</Number_03>
<Number_04>5.0</Number_04>
<Number_05>0.5</Number_05>
<Number_06>0.01</Number_06>
<Number_07>9.0</Number_07>
<Number_08>32.0</Number_08>
<Number_09>78</Number_09>
<Digital_value_01>HIGH</Digital_value_01>
<Digital_value_02>LOW</Digital_value_02>
<Delay>delay milliseconds</Delay>
<Milliseconds_01>1000</Milliseconds_01>
<Part_4>
<Do_This_Title>Do This</Do_This_Title>
<Do_This_Text>Construct the drawing as shown above. Make sure the mathematical operations are in the right order! Also important is the decimal part (e.g. “.0”, “.5”, “.01”) on most of the numbers in these equations. Those tell the microprocessor that you want it to use extra precision when calculating.
After you’ve completed the drawing, upload the sketch, and check out the RGB LED. Is it red or green? If it’s red, you’re probably plenty toasty, as your room temperature is above 78 °F. If it’s green, try warming up the sensor by blowing on it. Can you get it to turn red?
To find the exact temperature reading, open up the serial monitor. After viewing the values here, you may want to alter the value of the 78 in the if/else test.</Do_This_Text>
<Further_Explorations_Title>Further Explorations</Further_Explorations_Title>
<Further_Explorations_Text>Can you add a third check to alert when it’s too cold by turning on the blue LED? The real trick here is cooling the Sandbox off. One option is to power the board with a battery and stick it in the fridge.
Celsius and Fahrenheit are two of the most common temperature scales, but they’re not the only ones. Can you print the temperature in units of Kelvin or Rankine? You’ll need to find an algorithm to convert to them from Celsius.</Further_Explorations_Text>
</Part_4>
</Experiment>