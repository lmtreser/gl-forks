<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Experiment>
<Experiment_Text_Page_01>Experiment 13: Sound Detecting</Experiment_Text_Page_01>
<Experiment_Number_Page_01>13</Experiment_Number_Page_01>
<Experiment_Text_Page_02>Experiment 13: Sound Detecting</Experiment_Text_Page_02>
<Experiment_Text_Page_03>Experiment 13: Sound Detecting</Experiment_Text_Page_03>
<Experiment_Text_Page_04>Experiment 13: Sound Detecting</Experiment_Text_Page_04>
<Part_1>
<Description_Title>Sound Detecting</Description_Title>
</Part_1>
<Part_2>
<Description_Text> Pitchman voice Introducing the fabulously groundbreaking SOUND (Sandbox’s Over/Under Nominal Decibels) System! Microphone check 1..2..1..2. With the SOUND you’ll always have an adjustable sound level detector handy! Pitchman voice</Description_Text>
<Background_Information_Title>Background Information</Background_Information_Title>
<Background_Information_Text>In this experiment we’ll use the Sandbox’s on-board microphone to measure volume levels and display them on the LEDs. The microphone produces a sound wave, which is just another analog voltage that we can measure. The louder the sound, the higher the amplitude of the wave, and the larger the voltage.
Without a lot of complicated math and filters, sound can be a difficult thing to measure and react to. Using the Sandbox for voice recognition isn’t quite possible, but it can be programmed pick out high volumes as long as it can sample the microphone input fast enough. We can use the slide potentiometer to set the sensitivity of the display.</Background_Information_Text>
</Part_2>
<Part_3>
<Code_Components_Title>Code Components</Code_Components_Title>
<Code_Components_Text>nothing here</Code_Components_Text>
</Part_3>
<Program>program</Program>
<Setup>setup</Setup>
<Loop>loop</Loop>
<Set_Number_Variable>set number variable</Set_Number_Variable>
<Variable>variable</Variable>
<Value>value</Value>
<Variable_Name_01>i</Variable_Name_01>
<Variable_Name_02>maximum</Variable_Name_02>
<If_else>if/else</If_else>
<Test>test</Test>
<Then>then</Then>
<Else>else</Else>
<Analog_Pin>analog pin #</Analog_Pin>
<Math_Operator_01>x</Math_Operator_01>
<Math_Operator_02>+</Math_Operator_02>
<Math_Operator_03><![CDATA[÷]]></Math_Operator_03>
<Logical_Operator_01>&gt;</Logical_Operator_01>
<Logical_Operator_02>&gt; =</Logical_Operator_02>
<Set_Digital_Pin>set digital pin</Set_Digital_Pin>
<Sign>#</Sign>
<Pin_01>3</Pin_01>
<Pin_02>0</Pin_02>
<Number_01>1</Number_01>
<Number_02>3</Number_02>
<Number_03>5</Number_03>
<Number_04>6</Number_04>
<Digital_value_01>HIGH</Digital_value_01>
<Digital_value_02>LOW</Digital_value_02>
<Delay>delay milliseconds</Delay>
<Milliseconds_01>1000</Milliseconds_01>
<Part_4>
<Do_This_Title>Do This</Do_This_Title>
<Do_This_Text>After arranging the blocks, upload the sketch and have a look at the LEDs. Are they bouncing to your voice? If not, try tapping on the mic.
To adjust the sensitivity of the volume meter, move the slide pot up or down. With the slider set to the far right, it’ll take a really loud sound to make every LED turn on. But if you set the slider too low even the slightest noise will set the meter off.</Do_This_Text>
<Further_Explorations_Title>Further Explorations</Further_Explorations_Title>
<Further_Explorations_Text>Can you rewrite the sketch to use the RGB LED instead of the white LEDs? Make it turn red when the volume is really loud, blue and/or green otherwise? Bonus points for using analog outputs!</Further_Explorations_Text>
</Part_4>
</Experiment>